@inject IJSRuntime Js
<HeadContent>
    <meta name="theme-color" content="@AccentColor">
</HeadContent>
<DemoNavbarDropDown 
    Title="Accent Color"
    Label="Select Accent Color"
    Icon="@BootstrapIcons.SquareFill">
    <div class="input-group">
        <input type="color" id="colorSelectorInput" class="form-control form-control-color" title="Choose your color"
            @bind="@AccentColor" @oninput="OnColorChange">
        <input id="colorInput" type="text" class="form-control" title="Enter your color" @bind="@AccentColor"
            @oninput="OnColorChange">
    </div>
</DemoNavbarDropDown>

@code {

    private string AccentColor { get; set; } = "#ff6347";

    private async Task OnColorChange(ChangeEventArgs arg)
    {
        if (arg.Value != null && arg.Value.ToString() != AccentColor)
        {
            AccentColor = arg.Value.ToString()!;
        }
        await Js.InvokeVoidAsync("window.setAccentColor", arg.Value);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            AccentColor = await Js.InvokeAsync<string>("window.getAccentColor");
            await InvokeAsync(StateHasChanged);
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}