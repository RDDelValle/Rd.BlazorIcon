@inject IJSRuntime Js
<HeadContent>
    <meta name="theme-color" content="@AccentColor">
</HeadContent>
<div class="input-group flex-nowrap">
    <div class="input-group-text flex-shrink-0 fs-4">
        <BlazorIcon Icon="@FontAwesomeIcons.Solid.Paintbrush" IsFixedWidth />
    </div>
    <input type="color" id="demoAccentColorControl" class="form-control form-control-color"   
        style="min-width: 5rem;"  
        title="Choose your favorite icon color"
        @bind="@AccentColor" 
        @oninput="OnColorChange">
</div>

@code {

    private string AccentColor { get; set; } = "#ff6347";

    private async Task OnColorChange(ChangeEventArgs arg)
    {
        if (arg.Value != null && arg.Value.ToString() != AccentColor)
        {
            AccentColor = arg.Value.ToString()!;
        }
        await Js.InvokeVoidAsync("window.setAccentColor", arg.Value);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            AccentColor = await Js.InvokeAsync<string>("window.getAccentColor");
            await InvokeAsync(StateHasChanged);
        }
        await base.OnAfterRenderAsync(firstRender);
    }
}