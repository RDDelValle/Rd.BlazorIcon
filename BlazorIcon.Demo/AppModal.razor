@inherits AppComponentBase
@inject IJSRuntime JsRuntime
@if (App.SelectedIcon is not null)
{
    <div class="modal show" id="appModal" tabindex="-1" aria-labelledby="appModalLabel" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h1 class="modal-title fs-3 fw-bolder" id="appModalLabel">
                        @Brand
                    </h1 >
                    <button type="button" class="btn-close" @onclick="@App.DeselectIcon" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center p-4">
                    <div class="display-1 mb-4">
                        <BlazorIcon Icon="@App.SelectedIcon.GetRawConstantValue()?.ToString()" Title="@iconTypeString"></BlazorIcon>
                    </div>
                    <div class="input-group mb-4">
                        <input class="form-control" type="text" value="@iconComponentString" aria-label="Icon Component Code" readonly>
                        <button class="btn border d-flex align-items-center" type="button"
                                @onclick="CopyComponentToClipboard">
                            <BlazorIcon Icon="@BootstrapIcons.Clipboard"></BlazorIcon>
                        </button>
                    </div>
                    <div class="input-group">
                        <input class="form-control" type="text" value="@iconTypeString" aria-label="Icon Type Code" readonly>
                        <button class="btn border d-flex align-items-center" type="button"
                                @onclick="CopyIconTypeToClipboard">
                            <BlazorIcon Icon="@BootstrapIcons.Clipboard"></BlazorIcon>
                        </button>
                    </div>
                </div>  
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show" @onclick="@App.DeselectIcon"></div>
}

@code {

    [Parameter] public RenderFragment? Brand { get; set; }
    private string iconComponentString => $"<BlazorIcon Icon=\"{App.SelectedStyleType.ToString().Split(".").Last()}.{App.SelectedIcon?.Name}\" />";
    private string iconTypeString => $"{App.SelectedStyleType.ToString().Split(".").Last()}.{App.SelectedIcon?.Name}";

    private ValueTask CopyToClipboard(string value) 
        => JsRuntime.InvokeVoidAsync("window.copyToClipboard", value);

    private async Task CopyIconTypeToClipboard()
    {
        await CopyToClipboard(iconTypeString);
    }

    private async Task CopyComponentToClipboard()
    {
        await CopyToClipboard(iconComponentString);
    }

}